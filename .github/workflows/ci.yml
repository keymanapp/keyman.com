name: CI

on: [pull_request]

jobs:

  build-test:
    runs-on: ubuntu-20.04
    env:
      KEYMANHOSTS_TIER: TIER_TEST

    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2

    - name: Setup PHP 7.4
      uses: shivammathur/setup-php@6972aed899fa2dd4016a7e314c46e6902bcafb7b
      with:
        php-version: '7.4'
        extensions: curl, intl, mbstring, openssl
        coverage: none
      env:
        fail-fast: true

    - name: Build the Docker image
      shell: bash
      # --mount option requires BuildKit
      run: |
        ./build.sh build start
      env:
        fail-fast: true

    #
    # link to vendor/ dependencies already created in ./build.sh start
    #

    #
    # Finally, run the tests
    #
    - name: Lint
      shell: bash
      run: |
        ( set +e; set +o pipefail; find . -name '*.php' | grep -v '/vendor/' | xargs -n 1 -d '\n' php -l | grep -v "No syntax errors detected"; exit ${PIPESTATUS[2]} )

    - name: Check broken links
      shell: bash
      run: |
        set +e;
        set +o pipefail;
        npx broken-link-checker http://localhost:8053 --ordered --recursive --host-requests 50 -e --filter-level 3 | \
          grep -E "BROKEN|Getting links from" | \
          grep -B 1 "BROKEN"
        exit ${PIPESTATUS[0]}

    - name: Check PHP errors
      shell: bash
      run: |
        ( set +e; set +o pipefail; [ -f php_errors.log ] && echo 'PHP reported errors or warnings; see log below' && exit 1 || ( echo 'No PHP errors found' && exit 0 ) )
    #
    # If any of the tests fail, let's grab a bit more detail on the environment
    #
    - name: Report errors
      if: ${{ failure() }}
      shell: bash
      run: |
        echo "--- tier.txt ---"
        cat tier.txt
        echo "--- Docker log ---"
        docker container logs `docker container ls -l -q`
        echo "--- PHP Errors ---"
        [ -f php_errors.log ] && cat php_errors.log
        echo "--- Contents of /keyboards/khmer_angkor ---"
        curl http://localhost:8053/keyboards/khmer_angkor
        echo "--- PHPInfo ---"
        php -r 'phpinfo();'
